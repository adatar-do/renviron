% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/renviron_load.R
\name{renviron_load}
\alias{renviron_load}
\title{Load Environment Variables from the .Renviron File}
\usage{
renviron_load(
  scope = c("project", "user"),
  .file = ".Renviron",
  .vars = NULL,
  verbosity = 1,
  ...
)
}
\arguments{
\item{scope}{A character vector specifying the scope(s) to search for the .Renviron file.
Valid values are "user" and "project". The function searches in the order provided.
The default order is \code{c("project", "user")}. The "user" scope refers to the user's home
directory, while the "project" scope refers to the current project directory.}

\item{.file}{Optional filename to search within the specified scope.}

\item{.vars}{Optional character vector specifying which variables to load; if NULL, all variables are loaded.}

\item{verbosity}{An integer specifying the level of verbosity in messages. Default is 1.}

\item{...}{Additional arguments passed to other internal functions.}
}
\value{
A named list of environment variables set in the system environment, invisibly returned.
}
\description{
This function reads the .Renviron file, considering both user and project scopes as defined by the \code{scope} argument.
It loads the variables defined within the file into a named list and sets them in the system environment. Only lines
that follow the pattern key='value' or key="value" (where quotes are optional and can be single or double) are processed.
Variables should be in the \code{KEY=VALUE} format, with optional outer quotes around the value. Lines that do not match
this format are ignored.
}
\examples{
\dontrun{
# Load and set environment variables from the .Renviron file
env_vars <- renviron_load()

# Load and set specific environment variables from the .Renviron file
env_vars <- renviron_load(.vars = c("CENSUS_API_KEY", "GITHUB_PAT"))

# Load and set environment variables from a custom file
env_vars <- renviron_load(.file = ".env")

# Load and set environment variables from the user scope only
env_vars <- renviron_load(scope = "user")
}

}
