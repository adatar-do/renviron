% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/renviron_add.R
\name{renviron_add}
\alias{renviron_add}
\title{Add or Update an Environment Variable}
\usage{
renviron_add(key, value, .renviron = NULL, in_place = TRUE, ...)
}
\arguments{
\item{key}{A character string specifying the name of the environment variable to add or update.}

\item{value}{The new value for the environment variable, provided as a character string.}

\item{.renviron}{An optional named list of environment variables to modify instead of loading
the .Renviron file. This can be useful for testing or batch updates to environment variables.}

\item{in_place}{A logical flag indicating whether to save the changes back to the .Renviron
file (\code{TRUE}) or to return the modified list without saving (\code{FALSE}). Default is \code{TRUE}.}

\item{...}{Additional arguments to be passed to \code{renviron_save()} if \code{in_place = TRUE}.}
}
\value{
If \code{in_place} is \code{TRUE}, the function invisibly returns the modified list of environment
variables after saving it to the .Renviron file. If \code{in_place} is \code{FALSE}, it returns the modified
list without saving. This allows for further manipulation or inspection of the modified variables.
}
\description{
This function adds a new environment variable or updates the value of an existing variable
within the .Renviron file or a provided list of environment variables. By default, changes
are saved back to the .Renviron file (\code{in_place = TRUE}), but the function can also return a modified
list without saving (\code{in_place = FALSE}).
}
\examples{
\dontrun{
# Add or update the CENSUS_API_KEY variable in the .Renviron file
renviron_add("CENSUS_API_KEY", "new_key_value")

# Add or update the variable in a provided list without saving
env_list <- renviron_load()  # Load current environment variables
modified_env <- renviron_add("NEW_VAR", "some_value", .renviron = env_list, in_place = FALSE)
print(modified_env$NEW_VAR)
}

}
